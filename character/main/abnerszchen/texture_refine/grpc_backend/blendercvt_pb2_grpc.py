# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import blendercvt_pb2 as blendercvt__pb2


class BlendercvtStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConvertObjToGlb = channel.unary_unary(
                '/Blendercvt/ConvertObjToGlb',
                request_serializer=blendercvt__pb2.ConvertObjToGlbRequest.SerializeToString,
                response_deserializer=blendercvt__pb2.ConvertReply.FromString,
                )
        self.ConvertGlbToObj = channel.unary_unary(
                '/Blendercvt/ConvertGlbToObj',
                request_serializer=blendercvt__pb2.ConvertGlbToObjRequest.SerializeToString,
                response_deserializer=blendercvt__pb2.ConvertReply.FromString,
                )
        self.Shutdown = channel.unary_unary(
                '/Blendercvt/Shutdown',
                request_serializer=blendercvt__pb2.Empty.SerializeToString,
                response_deserializer=blendercvt__pb2.ConvertReply.FromString,
                )


class BlendercvtServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ConvertObjToGlb(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConvertGlbToObj(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Shutdown(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BlendercvtServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConvertObjToGlb': grpc.unary_unary_rpc_method_handler(
                    servicer.ConvertObjToGlb,
                    request_deserializer=blendercvt__pb2.ConvertObjToGlbRequest.FromString,
                    response_serializer=blendercvt__pb2.ConvertReply.SerializeToString,
            ),
            'ConvertGlbToObj': grpc.unary_unary_rpc_method_handler(
                    servicer.ConvertGlbToObj,
                    request_deserializer=blendercvt__pb2.ConvertGlbToObjRequest.FromString,
                    response_serializer=blendercvt__pb2.ConvertReply.SerializeToString,
            ),
            'Shutdown': grpc.unary_unary_rpc_method_handler(
                    servicer.Shutdown,
                    request_deserializer=blendercvt__pb2.Empty.FromString,
                    response_serializer=blendercvt__pb2.ConvertReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Blendercvt', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Blendercvt(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ConvertObjToGlb(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Blendercvt/ConvertObjToGlb',
            blendercvt__pb2.ConvertObjToGlbRequest.SerializeToString,
            blendercvt__pb2.ConvertReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConvertGlbToObj(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Blendercvt/ConvertGlbToObj',
            blendercvt__pb2.ConvertGlbToObjRequest.SerializeToString,
            blendercvt__pb2.ConvertReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Shutdown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Blendercvt/Shutdown',
            blendercvt__pb2.Empty.SerializeToString,
            blendercvt__pb2.ConvertReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
