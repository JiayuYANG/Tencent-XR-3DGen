model:
  base_lr: 5.0e-4
  target: renderer.sds_renderer_3d.SDSRendererTrainer
  params:
    total_steps: 1500
    warm_up_steps: 0
    train_batch_num: 3584
    train_batch_fg_num: 512
    test_batch_num: 4096
    use_mask: true
    lambda_rgb_loss: 0.5
    lambda_mask_loss: 1.0
    lambda_contra_loss: 0.02
    lambda_eikonal_loss: 0.1
    use_warm_up: true
    renderer: 3dgs

data:
  target: renderer.dummy_dataset.DummyDataset
  params: {}

callbacks:
  save_interval: 500

trainer:
  val_check_interval: 500
  max_steps: 1500



### Input
# input rgba image path (default to None, can be load in GUI too)
input: 
# input text prompt (default to None, can be input in GUI too)
prompt: a photo of a frog, 3d model  #a photo of an icecream # wearing a yellow hat
negative_prompt:
subprompts: ###NOTE:hyan
- a photo of an axe # a green frog
- a photo of a red sweater
# input mesh for stage 2 (auto-search from stage 1 output path if None)
mesh:
# estimated elevation angle for input image 
elevation: 0
# reference image resolution
ref_size: 256
# density thresh for mesh extraction
density_thresh: 1

### Output
outdir: logs
mesh_format: obj
save_path: icecream_2d

### Training
# use mvdream instead of sd 2.1
mvdream: False
# use imagedream
imagedream: False
# use stable-zero123 instead of zero123-xl
stable_zero123: False 
# guidance loss weights (0 to disable)
lambda_sd: 0.001
lambda_zero123: 0
### NOTE:hyan
# lambda_dist: 100000
# lambda_normal: 0.05

lambda_normal: 0.05 
lambda_dist: 1.
lambda_dssim: 0.2
lambda_mask: 1.0

# warmup rgb supervision for image-to-3d
warmup_rgb_loss: True
# training batch size per iter
batch_size: 1
# training iterations for stage 1
iters: 500
# whether to linearly anneal timestep
anneal_timestep: True
# training iterations for stage 2
iters_refine: 50
# training camera radius
radius: 1.5
# training camera fovy
fovy: 49.1
# training camera min elevation
min_ver: -30 # NOTE:hyan ori=-30
# training camera max elevation
max_ver: 30 # NOTE:hyan ori=30
# checkpoint to load for stage 1 (should be a ply file)
load: #../part123_3dgs_fromsurf/output/gs_frog_sweater/frog_sweater/model.ply ###NOTE:hyan
load_target:  # output/renderer_3dgs_regso/frog_sweater_rgba/resem_model_1.ply
# whether allow geom training in stage 2
train_geo: False
# prob to invert background color during training (0 = always black, 1 = always white)
invert_bg_prob: 0.5

# only learn sem
only_learn_sem: False ###NOTE:hyan

### GUI
gui: False
force_cuda_rast: True
# GUI resolution
H: 800
W: 800

### Gaussian splatting
num_pts: 5000
sh_degree: 0
position_lr_init: 0.001
position_lr_final: 0.00002
position_lr_delay_mult: 0.02
position_lr_max_steps: 300
feature_lr: 0.01
opacity_lr: 0.05
scaling_lr: 0.005
rotation_lr: 0.005
sem_lr: 0.01 ### NOTE:hyan
percent_dense: 0.01
density_start_iter: 500
density_end_iter: 3000 # 3000
densification_interval: 100
opacity_reset_interval: 700
densify_grad_threshold: 0.0002

densify_min_opacity: 0.05 
densify_extent: 4

### Textured Mesh
geom_lr: 0.0001
texture_lr: 0.2